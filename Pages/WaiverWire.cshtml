@page
@model FantasyToolbox.Pages.WaiverWireModel
@{
    ViewData["Title"] = "Waiver Wire";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3><i class="bi bi-list-task"></i> Waiver Wire Analysis</h3>
                    <p class="mb-0">Find the best available players and make informed waiver wire decisions.</p>
                </div>
                <div class="card-body">
                    @if (ViewData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            <strong>Error:</strong> @ViewData["ErrorMessage"]
                        </div>
                    }
                    else if (ViewData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            <strong>Success:</strong> @ViewData["SuccessMessage"]
                        </div>
                    }

                    @if (Model.IsEspnConnected)
                    {
                        <div class="card mb-4">
                            <div class="card-body">
                                <h5 class="card-title">Filter Options</h5>
                                <form method="get" class="row g-3 align-items-end">
                                    <div class="col-md-5">
                                        <label for="selectedPlayerId" class="form-label">Compare Against Your Roster Player:</label>
                                        <select name="selectedPlayerId" id="selectedPlayerId" class="form-select">
                                            <option value="">Select a player (optional)</option>
                                            @if (Model.AllRosterPlayers?.Any() == true)
                                            {
                                                var positionGroups = Model.AllRosterPlayers.GroupBy(p => p.Position);
                                                foreach (var positionGroup in positionGroups.OrderBy(g => g.Key))
                                                {
                                                    <optgroup label="@positionGroup.Key">
                                                        @foreach (var player in positionGroup.OrderBy(p => p.FullName))
                                                        {
                                                            if (Model.SelectedPlayerId == player.PlayerId)
                                                            {
                                                                <option value="@player.PlayerId" selected>@player.FullName (@player.Position - @player.ProTeam)</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@player.PlayerId">@player.FullName (@player.Position - @player.ProTeam)</option>
                                                            }
                                                        }
                                                    </optgroup>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <label for="position" class="form-label">Position Filter:</label>
                                        <select name="position" id="position" class="form-select">
                                            <option value="">All Positions</option>
                                            @if (Model.SelectedPosition == "QB")
                                            {
                                                <option value="QB" selected>Quarterback (QB)</option>
                                            }
                                            else
                                            {
                                                <option value="QB">Quarterback (QB)</option>
                                            }
                                            @if (Model.SelectedPosition == "RB")
                                            {
                                                <option value="RB" selected>Running Back (RB)</option>
                                            }
                                            else
                                            {
                                                <option value="RB">Running Back (RB)</option>
                                            }
                                            @if (Model.SelectedPosition == "WR")
                                            {
                                                <option value="WR" selected>Wide Receiver (WR)</option>
                                            }
                                            else
                                            {
                                                <option value="WR">Wide Receiver (WR)</option>
                                            }
                                            @if (Model.SelectedPosition == "TE")
                                            {
                                                <option value="TE" selected>Tight End (TE)</option>
                                            }
                                            else
                                            {
                                                <option value="TE">Tight End (TE)</option>
                                            }
                                            @if (Model.SelectedPosition == "K")
                                            {
                                                <option value="K" selected>Kicker (K)</option>
                                            }
                                            else
                                            {
                                                <option value="K">Kicker (K)</option>
                                            }
                                            @if (Model.SelectedPosition == "D/ST")
                                            {
                                                <option value="D/ST" selected>Defense/Special Teams (D/ST)</option>
                                            }
                                            else
                                            {
                                                <option value="D/ST">Defense/Special Teams (D/ST)</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label">&nbsp;</label>
                                        <div class="d-grid gap-2 d-md-flex">
                                            <button type="submit" class="btn btn-primary">
                                                <i class="bi bi-search"></i> Update Analysis
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        @if (Model.WaiverWirePlayers?.Any() == true)
                                        {
                                            <button type="submit" formmethod="post" formaction="?handler=ExportCsv" class="btn btn-outline-secondary w-100">
                                                <i class="bi bi-download"></i> Export CSV
                                            </button>
                                        }
                                    </div>
                                </form>
                            </div>
                        </div>

                        @if (Model.WaiverWirePlayers?.Any() == true && Model.AllRosterPlayers?.Any() == true)
                        {
                            <div class="mb-4">
                                <button id="getAiRecommendationsBtn" class="btn btn-success">
                                    <i class="bi bi-robot"></i> Get AI Waiver Wire Recommendations
                                </button>
                                <small class="text-muted ms-2">Get personalized pickup suggestions based on your roster</small>
                            </div>
                        }

                        @if (Model.WaiverWirePlayers?.Any() == true)
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>Player Name</th>
                                            <th>Position</th>
                                            <th>Team</th>
                                            <th>Ownership %</th>
                                            <th>Fantasy Points</th>
                                            <th>Projected Points</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var player in Model.WaiverWirePlayers)
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@player.FullName</strong>
                                                </td>
                                                <td>
                                                    <span class="badge bg-secondary">@player.Position</span>
                                                </td>
                                                <td>@player.ProTeam</td>
                                                <td>@player.OwnershipPercentage%</td>
                                                <td>@player.FantasyPoints</td>
                                                <td>@player.ProjectedPoints</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="mt-4">
                                <h5>Analysis Summary</h5>
                                <p class="text-muted">
                                    Showing @Model.WaiverWirePlayers.Count() available waiver wire players
                                    @if (!string.IsNullOrEmpty(Model.SelectedPosition))
                                    {
                                        <text>at position @Model.SelectedPosition</text>
                                    }
                                    . Players are sorted by ownership percentage and fantasy points to help you identify the best available options.
                                </p>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <h5>No waiver wire data available</h5>
                                <p>This could be due to:</p>
                                <ul>
                                    <li>The waiver wire period may be closed</li>
                                    <li>No players available matching the selected position filter</li>
                                    <li>ESPN API may be temporarily unavailable</li>
                                </ul>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <h5>ESPN Connection Required</h5>
                            <p>To view waiver wire data, you need to connect your ESPN account first.</p>
                            <a href="/ConnectESPN" class="btn btn-primary">Connect ESPN Account</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- AI Recommendations Modal -->
<div class="modal fade" id="aiRecommendationsModal" tabindex="-1" aria-labelledby="aiRecommendationsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="aiRecommendationsModalLabel">
                    <i class="bi bi-robot"></i> AI Waiver Wire Recommendations
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="aiRecommendationsContent">
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Analyzing...</span>
                        </div>
                        <p class="mt-2">AI is analyzing your roster and available waiver wire players...</p>
                        <small class="text-muted">This may take a few seconds</small>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const aiButton = document.getElementById('getAiRecommendationsBtn');
    
    if (aiButton) {
        aiButton.addEventListener('click', function() {
            // Get current waiver wire and roster data
            const waiverPlayers = @Html.Raw(Json.Serialize(Model.WaiverWirePlayers ?? new List<WaiverWireModel.WaiverWirePlayer>()));
            const roster = @Html.Raw(Json.Serialize(Model.AllRosterPlayers ?? new List<WaiverWireModel.RosterPlayer>()));
            const positionFilter = '@Model.SelectedPosition';
            
            if (!roster || roster.length === 0) {
                alert('No roster data available. Please make sure you have connected your ESPN account and have a selected team.');
                return;
            }
            
            if (!waiverPlayers || waiverPlayers.length === 0) {
                alert('No waiver wire players available. Please try refreshing the data.');
                return;
            }
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('aiRecommendationsModal'));
            modal.show();
            
            // Reset content to loading state
            document.getElementById('aiRecommendationsContent').innerHTML = `
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Analyzing...</span>
                    </div>
                    <p class="mt-2">AI is analyzing your roster and available waiver wire players...</p>
                    <small class="text-muted">This may take a few seconds</small>
                </div>
            `;
            
            // Make API call
            const requestData = {
                roster: roster,
                waiverPlayers: waiverPlayers,
                positionFilter: positionFilter || null
            };
            
            fetch('/api/recommendations/waiver-wire', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(error => Promise.reject(error));
                }
                return response.json();
            })
            .then(data => {
                if (data.recommendations) {
                    // Format the recommendations with proper line breaks
                    const formattedRecommendations = data.recommendations.replace(/\n/g, '<br>');
                    
                    document.getElementById('aiRecommendationsContent').innerHTML = `
                        <div class="alert alert-info">
                            <strong>Personalized Recommendations</strong>
                            ${data.positionFilter ? ` (Filtered to ${data.positionFilter} position)` : ''}
                            <br>
                            <small>Based on ${data.rosterCount} roster players and ${data.waiverPlayersCount} available players</small>
                        </div>
                        <div class="recommendations-text" style="white-space: pre-line; line-height: 1.6;">
                            ${data.recommendations}
                        </div>
                        <hr>
                        <small class="text-muted">
                            Generated on ${new Date(data.generatedAt).toLocaleString()}
                        </small>
                    `;
                } else {
                    document.getElementById('aiRecommendationsContent').innerHTML = `
                        <div class="alert alert-warning">
                            <strong>No Recommendations Available</strong><br>
                            Unable to generate recommendations at this time. Please try again later.
                        </div>
                    `;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                let errorMessage = 'Failed to get AI recommendations. Please try again later.';
                
                if (error.error) {
                    errorMessage = error.error;
                }
                
                document.getElementById('aiRecommendationsContent').innerHTML = `
                    <div class="alert alert-danger">
                        <strong>Error:</strong> ${errorMessage}
                    </div>
                `;
            });
        });
    }
});
</script>
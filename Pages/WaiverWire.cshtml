@page
@model WaiverWireModel
@{
    ViewData["Title"] = "Waiver Wire";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2>Waiver Wire</h2>
            
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    @Model.ErrorMessage
                </div>
            }
            
            @if (!string.IsNullOrEmpty(Model.SuccessMessage))
            {
                <div class="alert alert-success">
                    @Model.SuccessMessage
                </div>
            }

            <!-- Position Filter and CSV Export Controls -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <form method="get">
                        <div class="input-group">
                            <select name="position" class="form-select" onchange="this.form.submit()">
                                <option value="">All Positions</option>
                                @if (Model.SelectedPosition == "QB")
                                {
                                    <option value="QB" selected>Quarterback (QB)</option>
                                }
                                else
                                {
                                    <option value="QB">Quarterback (QB)</option>
                                }
                                @if (Model.SelectedPosition == "RB")
                                {
                                    <option value="RB" selected>Running Back (RB)</option>
                                }
                                else
                                {
                                    <option value="RB">Running Back (RB)</option>
                                }
                                @if (Model.SelectedPosition == "WR")
                                {
                                    <option value="WR" selected>Wide Receiver (WR)</option>
                                }
                                else
                                {
                                    <option value="WR">Wide Receiver (WR)</option>
                                }
                                @if (Model.SelectedPosition == "TE")
                                {
                                    <option value="TE" selected>Tight End (TE)</option>
                                }
                                else
                                {
                                    <option value="TE">Tight End (TE)</option>
                                }
                                @if (Model.SelectedPosition == "K")
                                {
                                    <option value="K" selected>Kicker (K)</option>
                                }
                                else
                                {
                                    <option value="K">Kicker (K)</option>
                                }
                                @if (Model.SelectedPosition == "D/ST")
                                {
                                    <option value="D/ST" selected>Defense/Special Teams (D/ST)</option>
                                }
                                else
                                {
                                    <option value="D/ST">Defense/Special Teams (D/ST)</option>
                                }
                            </select>
                            <button type="submit" class="btn btn-primary">Filter</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-6 text-end">
                    @if (Model.WaiverWirePlayers?.Any() == true)
                    {
                        <form method="post" asp-page-handler="ExportCsv" style="display: inline;">
                            <input type="hidden" name="position" value="@Model.SelectedPosition" />
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-download"></i> Export to CSV
                            </button>
                        </form>
                    }
                </div>
            </div>

            @if (Model.WaiverWirePlayers?.Any() == true)
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Rank</th>
                                <th>Player Name</th>
                                <th>Position</th>
                                <th>Team</th>
                                <th>Ownership %</th>
                                <th>Fantasy Points</th>
                                <th>Projected Points</th>
                                <th>AI Analysis</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var player in Model.WaiverWirePlayers)
                            {
                                <tr>
                                    <td>@player.Rank</td>
                                    <td><strong>@player.FullName</strong></td>
                                    <td>
                                        <span class="badge bg-secondary">@player.Position</span>
                                    </td>
                                    <td>@player.ProTeam</td>
                                    <td>@player.OwnershipPercentage%</td>
                                    <td>@player.FantasyPoints</td>
                                    <td>@player.ProjectedPoints</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-primary analyze-player" 
                                                data-player-id="@player.Id" 
                                                data-player-name="@player.FullName">
                                            <i class="bi bi-robot"></i> Analyze
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                
                <div class="mt-3">
                    <p class="text-muted">
                        Showing @Model.WaiverWirePlayers.Count player(s)
                        @if (!string.IsNullOrEmpty(Model.SelectedPosition))
                        {
                            @:for position @Model.SelectedPosition
                        }
                    </p>
                </div>
            }
            else if (Model.IsEspnConnected)
            {
                <div class="alert alert-info">
                    <h5>No waiver wire data available</h5>
                    <p>This could be due to:</p>
                    <ul>
                        <li>The waiver wire period may be closed</li>
                        <li>No players available matching the selected position filter</li>
                        <li>ESPN API may be temporarily unavailable</li>
                    </ul>
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    <h5>ESPN Connection Required</h5>
                    <p>To view waiver wire data, you need to connect your ESPN account first.</p>
                    <a href="/ConnectESPN" class="btn btn-primary">Connect ESPN Account</a>
                </div>
            }
        </div>
    </div>
</div>

<!-- AI Analysis Modal -->
<div class="modal fade" id="analysisModal" tabindex="-1" aria-labelledby="analysisModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="analysisModalLabel">
                    <i class="bi bi-robot"></i> AI Player Analysis
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="analysisPlayerName" class="h6 mb-3"></div>
                <div id="analysisContent">
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Analyzing...</span>
                        </div>
                        <p class="mt-2">AI is analyzing this player...</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="btn-group" role="group" aria-label="Analysis types">
                    <input type="radio" class="btn-check" name="analysisType" id="generalAnalysis" value="general" checked>
                    <label class="btn btn-outline-primary" for="generalAnalysis">General</label>
                    
                    <input type="radio" class="btn-check" name="analysisType" id="waiverAnalysis" value="waiver_pickup">
                    <label class="btn btn-outline-primary" for="waiverAnalysis">Waiver</label>
                    
                    <input type="radio" class="btn-check" name="analysisType" id="startSitAnalysis" value="start_sit">
                    <label class="btn btn-outline-primary" for="startSitAnalysis">Start/Sit</label>
                    
                    <input type="radio" class="btn-check" name="analysisType" id="tradeAnalysis" value="trade_value">
                    <label class="btn btn-outline-primary" for="tradeAnalysis">Trade Value</label>
                </div>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle analyze player buttons
    document.querySelectorAll('.analyze-player').forEach(button => {
        button.addEventListener('click', function() {
            const playerId = this.getAttribute('data-player-id');
            const playerName = this.getAttribute('data-player-name');
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('analysisModal'));
            document.getElementById('analysisPlayerName').textContent = playerName;
            document.getElementById('analysisContent').innerHTML = `
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Analyzing...</span>
                    </div>
                    <p class="mt-2">AI is analyzing this player...</p>
                </div>
            `;
            modal.show();
            
            // Get selected analysis type
            const analysisType = document.querySelector('input[name="analysisType"]:checked').value;
            
            // Call AI analysis API
            fetch(`/api/analysis/player/${playerId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    analysisType: analysisType
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.analysis) {
                    document.getElementById('analysisContent').innerHTML = `
                        <div class="alert alert-info">
                            <strong>Analysis Type:</strong> ${data.analysisType.replace('_', ' ').toUpperCase()}
                        </div>
                        <div class="analysis-text">${data.analysis}</div>
                        <small class="text-muted">Generated on ${new Date(data.generatedAt).toLocaleString()}</small>
                    `;
                } else if (data.error) {
                    document.getElementById('analysisContent').innerHTML = `
                        <div class="alert alert-danger">
                            <strong>Error:</strong> ${data.error}
                        </div>
                    `;
                } else {
                    document.getElementById('analysisContent').innerHTML = `
                        <div class="alert alert-warning">
                            No analysis available for this player.
                        </div>
                    `;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('analysisContent').innerHTML = `
                    <div class="alert alert-danger">
                        <strong>Error:</strong> Failed to load AI analysis. Please try again.
                    </div>
                `;
            });
        });
    });

    // Handle analysis type changes
    document.querySelectorAll('input[name="analysisType"]').forEach(radio => {
        radio.addEventListener('change', function() {
            // Re-trigger analysis if modal is open and a player is selected
            const modal = document.getElementById('analysisModal');
            if (modal.classList.contains('show')) {
                const activeButton = document.querySelector('.analyze-player[data-player-id]');
                if (activeButton) {
                    activeButton.click();
                }
            }
        });
    });
});
</script>